@page "/trainLetter"

@inject ApiConnection _apiCall

<PageTitle>Sök efter en station att åka från</PageTitle>

<div class="behind">
    <div class="overlay">
    </div>
    <div class="placement">
        <div class="placement_left">
            <div class="searchBox">
                <input type="text"
                placeholder="Skriv för att söka station"
                @bind-value="station"
                @bind-value:event="oninput"
                @onkeyup="FindStationsAsync"
                />
            </div>
        </div>
        <div class="placement_right">
            <div class="searchResultLayout">
            @if (foundStations is null)
            {
                <p class="emptySearchResult">Inga träffar...</p>
            }
            else
            {
                // Ansvers limited to 10 in the API call in ApiConnection
                foreach (var found in foundStations)
                {
                    <a class="searchResult" href="/ChosenStation/@found.LocationSignature">@found.AdvertisedLocationName</a>
                }
            }
            </div>
        </div>
    </div>
</div>
@code {
    public List<JsonStationObject.Trainstation> foundStations;
    public string station = "";

    public async void FindStationsAsync()
    {
        if (station.Count() > 0)
        {
            foundStations = await _apiCall.GetStationsAsync(station);
        }
    }
    // TODO - lägga till en "laddarsida" till när den frågar API:et - typ filter över som står "laddar"?
}


