@inject ApiConnection _apiCall

@if (departures is not null)
{
   <br/>
   <table  class="table">
       <thead>
           <tr>
               <th scope="col">Avgångstid</th>
               <th scope="col">Mot</th>
               <th scope="col">Från spår</th>
               <th scope="col">Tågnummer</th>
               <th scope="col">Info om resan</th>
           </tr>
       </thead>
       @foreach (var departure in departures)
       {
           @if (departure.Announcements.AdvertisedTimeAtLocation < DateTime.Now)
           {
               <DepartureTableRows Departure="departure"></DepartureTableRows>
           }
           @if (departure.Announcements.Canceled != true)
            {
                <DepartureTableRows Departure="departure" ></DepartureTableRows>
            }
            @if (departure.Announcements.Canceled == true)
            {
                    <DepartureTableRows Departure="departure" @*class="text-decoration-line-through"*@></DepartureTableRows>
            }
        }
    </table>
}

@code {
    [Parameter]
    public string LocationSignature { get; set; }
    public List<TrainDepartureModel> departures;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        GetDepartures();
    }
    private async void GetDepartures()
    {
        departures = await _apiCall.GetDeparturesAsync(LocationSignature);
    }
}
